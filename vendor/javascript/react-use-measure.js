// react-use-measure@2.1.7 downloaded from https://ga.jspm.io/npm:react-use-measure@2.1.7/dist/index.js

import{useState as e,useRef as n,useEffect as t,useMemo as o}from"react";function g(e,n){let t;return(...o)=>{window.clearTimeout(t),t=window.setTimeout((()=>e(...o)),n)}}function j({debounce:i,scroll:s,polyfill:c,offsetSize:l}={debounce:0,scroll:!1,offsetSize:!1}){const u=c||(typeof window=="undefined"?class{}:window.ResizeObserver);if(!u)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[a,d]=e({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),f=n({element:null,scrollContainers:null,resizeObserver:null,lastBounds:a,orientationHandler:null}),w=i?typeof i=="number"?i:i.scroll:null,h=i?typeof i=="number"?i:i.resize:null,m=n(!1);t((()=>(m.current=!0,()=>{m.current=!1})));const[p,z,y]=o((()=>{const r=()=>{if(!f.current.element)return;const{left:e,top:n,width:t,height:o,bottom:i,right:s,x:c,y:u}=f.current.element.getBoundingClientRect(),a={left:e,top:n,width:t,height:o,bottom:i,right:s,x:c,y:u};f.current.element instanceof HTMLElement&&l&&(a.height=f.current.element.offsetHeight,a.width=f.current.element.offsetWidth),Object.freeze(a),m.current&&!D(f.current.lastBounds,a)&&d(f.current.lastBounds=a)};return[r,h?g(r,h):r,w?g(r,w):r]}),[d,l,w,h]);function v(){f.current.scrollContainers&&(f.current.scrollContainers.forEach((e=>e.removeEventListener("scroll",y,!0))),f.current.scrollContainers=null),f.current.resizeObserver&&(f.current.resizeObserver.disconnect(),f.current.resizeObserver=null),f.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",f.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",f.current.orientationHandler))}function b(){f.current.element&&(f.current.resizeObserver=new u(y),f.current.resizeObserver.observe(f.current.element),s&&f.current.scrollContainers&&f.current.scrollContainers.forEach((e=>e.addEventListener("scroll",y,{capture:!0,passive:!0}))),f.current.orientationHandler=()=>{y()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",f.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",f.current.orientationHandler))}const L=e=>{!e||e===f.current.element||(v(),f.current.element=e,f.current.scrollContainers=E(e),b())};return X(y,!!s),W(z),t((()=>{v(),b()}),[s,y,z]),t((()=>v),[]),[L,a,p]}function W(e){t((()=>{const n=e;return window.addEventListener("resize",n),()=>{window.removeEventListener("resize",n)}}),[e])}function X(e,n){t((()=>{if(n){const n=e;return window.addEventListener("scroll",n,{capture:!0,passive:!0}),()=>{window.removeEventListener("scroll",n,!0)}}}),[e,n])}function E(e){const n=[];if(!e||e===document.body)return n;const{overflow:t,overflowX:o,overflowY:i}=window.getComputedStyle(e);return[t,o,i].some((e=>e==="auto"||e==="scroll"))&&n.push(e),[...n,...E(e.parentElement)]}const i=["x","y","top","bottom","left","right","width","height"],D=(e,n)=>i.every((t=>e[t]===n[t]));export{j as default};

